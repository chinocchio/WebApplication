// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.Data;

#nullable disable

namespace WebApplication2.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250422013816_SellerV2")]
    partial class SellerV2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication2.Models.BusinessPartner", b =>
                {
                    b.Property<int>("BusinessPartnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessPartnerId"));

                    b.Property<int?>("CustomerCode")
                        .HasColumnType("int");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BusinessPartnerId");

                    b.ToTable("BusinessPartners");
                });

            modelBuilder.Entity("WebApplication2.Models.Property", b =>
                {
                    b.Property<int>("PropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PropertyId"));

                    b.Property<string>("BuildingPhase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PropertyId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("WebApplication2.Models.SalesProponent", b =>
                {
                    b.Property<int>("SalesProponentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesProponentId"));

                    b.Property<string>("Broker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeputyMarketingDirector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingDirector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingOfficer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PS_QC_ISM")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SalesProponentId");

                    b.ToTable("SalesProponents");
                });

            modelBuilder.Entity("WebApplication2.Models.SalesTransaction", b =>
                {
                    b.Property<int>("SalesTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesTransactionId"));

                    b.Property<int?>("BusinessPartnerId")
                        .HasColumnType("int");

                    b.Property<int>("ContractNumber")
                        .HasColumnType("int");

                    b.Property<int?>("PropertyId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesProponentsId")
                        .HasColumnType("int");

                    b.Property<string>("TypeOfSale")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SalesTransactionId");

                    b.HasIndex("BusinessPartnerId");

                    b.HasIndex("PropertyId");

                    b.HasIndex("SalesProponentsId");

                    b.ToTable("SalesTransactions");
                });

            modelBuilder.Entity("WebApplication2.Models.SalesTransaction", b =>
                {
                    b.HasOne("WebApplication2.Models.BusinessPartner", "BusinessPartner")
                        .WithMany("SalesTransaction")
                        .HasForeignKey("BusinessPartnerId");

                    b.HasOne("WebApplication2.Models.Property", "Properties")
                        .WithMany("SalesTransaction")
                        .HasForeignKey("PropertyId");

                    b.HasOne("WebApplication2.Models.SalesProponent", "SalesProponent")
                        .WithMany("SalesTransaction")
                        .HasForeignKey("SalesProponentsId");

                    b.Navigation("BusinessPartner");

                    b.Navigation("Properties");

                    b.Navigation("SalesProponent");
                });

            modelBuilder.Entity("WebApplication2.Models.BusinessPartner", b =>
                {
                    b.Navigation("SalesTransaction");
                });

            modelBuilder.Entity("WebApplication2.Models.Property", b =>
                {
                    b.Navigation("SalesTransaction");
                });

            modelBuilder.Entity("WebApplication2.Models.SalesProponent", b =>
                {
                    b.Navigation("SalesTransaction");
                });
#pragma warning restore 612, 618
        }
    }
}
