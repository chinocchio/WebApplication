// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.Data;

#nullable disable

namespace WebApplication2.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250425085311_ModifiedCreditReview")]
    partial class ModifiedCreditReview
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication2.Models.BusinessPartner", b =>
                {
                    b.Property<int>("BusinessPartnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessPartnerId"));

                    b.Property<string>("ClientBase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CustomerCode")
                        .HasColumnType("bigint");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("IdDateSubmitted")
                        .HasColumnType("date");

                    b.Property<string>("IdSubmitted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BusinessPartnerId");

                    b.ToTable("BusinessPartners");
                });

            modelBuilder.Entity("WebApplication2.Models.CreditReview", b =>
                {
                    b.Property<int>("CreditReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CreditReviewId"));

                    b.Property<string>("CMAPResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("CiCompletionDate")
                        .HasColumnType("date");

                    b.Property<string>("CreditReviewRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditReviewResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedMaxTerm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsBankApporvable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxTerm")
                        .HasColumnType("int");

                    b.Property<string>("NDIStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NdiCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NdiRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NdiVsBankMaTobAmt")
                        .HasColumnType("int");

                    b.Property<int>("NetDisposableIncome")
                        .HasColumnType("int");

                    b.Property<int>("NetNdi")
                        .HasColumnType("int");

                    b.Property<int>("OtherLoans")
                        .HasColumnType("int");

                    b.Property<string>("PercentOfNdiVsMa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RedTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RedTagReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfIncome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CreditReviewId");

                    b.ToTable("CreditReviews");
                });

            modelBuilder.Entity("WebApplication2.Models.Property", b =>
                {
                    b.Property<int>("PropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PropertyId"));

                    b.Property<string>("BuildingPhase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PropertyId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("WebApplication2.Models.ReservationFee", b =>
                {
                    b.Property<int>("ReservationFeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationFeeId"));

                    b.Property<double>("RfAmountGMTOE_Unit")
                        .HasColumnType("float");

                    b.Property<double>("RfAmountPaidToGMTOE")
                        .HasColumnType("float");

                    b.Property<double>("RfAmountPaidToUnit")
                        .HasColumnType("float");

                    b.Property<DateOnly>("RfDateCredited")
                        .HasColumnType("date");

                    b.Property<DateOnly>("RfDatePaid")
                        .HasColumnType("date");

                    b.Property<string>("RfOrNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RfProofUsedUponHolding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReservationFeeId");

                    b.ToTable("ReservationFees");
                });

            modelBuilder.Entity("WebApplication2.Models.SalesProponent", b =>
                {
                    b.Property<int>("SalesProponentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesProponentId"));

                    b.Property<string>("Broker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeputyMarketingDirector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingDirector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingOfficer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PS_QC_ISM")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SalesProponentId");

                    b.ToTable("SalesProponents");
                });

            modelBuilder.Entity("WebApplication2.Models.SalesTransaction", b =>
                {
                    b.Property<int>("SalesTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesTransactionId"));

                    b.Property<int?>("BusinessPartnerId")
                        .HasColumnType("int");

                    b.Property<long>("ContractNumber")
                        .HasColumnType("bigint");

                    b.Property<int?>("CreditReviewId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("HoldingDate")
                        .HasColumnType("date");

                    b.Property<string>("Milestone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewColorStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromoDiscount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropertyId")
                        .HasColumnType("int");

                    b.Property<int?>("ReservationFeeId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesProponentsId")
                        .HasColumnType("int");

                    b.Property<string>("StatusInGeneral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfSale")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SalesTransactionId");

                    b.HasIndex("BusinessPartnerId");

                    b.HasIndex("CreditReviewId");

                    b.HasIndex("PropertyId");

                    b.HasIndex("ReservationFeeId")
                        .IsUnique()
                        .HasFilter("[ReservationFeeId] IS NOT NULL");

                    b.HasIndex("SalesProponentsId");

                    b.ToTable("SalesTransactions");
                });

            modelBuilder.Entity("WebApplication2.Models.SalesTransaction", b =>
                {
                    b.HasOne("WebApplication2.Models.BusinessPartner", "BusinessPartner")
                        .WithMany("SalesTransaction")
                        .HasForeignKey("BusinessPartnerId");

                    b.HasOne("WebApplication2.Models.CreditReview", "CreditReview")
                        .WithMany("SalesTransaction")
                        .HasForeignKey("CreditReviewId");

                    b.HasOne("WebApplication2.Models.Property", "Properties")
                        .WithMany("SalesTransaction")
                        .HasForeignKey("PropertyId");

                    b.HasOne("WebApplication2.Models.ReservationFee", "ReservationFee")
                        .WithOne("SalesTransaction")
                        .HasForeignKey("WebApplication2.Models.SalesTransaction", "ReservationFeeId");

                    b.HasOne("WebApplication2.Models.SalesProponent", "SalesProponent")
                        .WithMany("SalesTransaction")
                        .HasForeignKey("SalesProponentsId");

                    b.Navigation("BusinessPartner");

                    b.Navigation("CreditReview");

                    b.Navigation("Properties");

                    b.Navigation("ReservationFee");

                    b.Navigation("SalesProponent");
                });

            modelBuilder.Entity("WebApplication2.Models.BusinessPartner", b =>
                {
                    b.Navigation("SalesTransaction");
                });

            modelBuilder.Entity("WebApplication2.Models.CreditReview", b =>
                {
                    b.Navigation("SalesTransaction");
                });

            modelBuilder.Entity("WebApplication2.Models.Property", b =>
                {
                    b.Navigation("SalesTransaction");
                });

            modelBuilder.Entity("WebApplication2.Models.ReservationFee", b =>
                {
                    b.Navigation("SalesTransaction")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication2.Models.SalesProponent", b =>
                {
                    b.Navigation("SalesTransaction");
                });
#pragma warning restore 612, 618
        }
    }
}
