// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.Data;

#nullable disable

namespace WebApplication2.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250429030433_AnotherNullableInSalesDocFix")]
    partial class AnotherNullableInSalesDocFix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication2.Models.BusinessPartner", b =>
                {
                    b.Property<int>("BusinessPartnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessPartnerId"));

                    b.Property<string>("ClientBase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CustomerCode")
                        .HasColumnType("bigint");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("IdDateSubmitted")
                        .HasColumnType("date");

                    b.Property<string>("IdSubmitted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BusinessPartnerId");

                    b.ToTable("BusinessPartners");
                });

            modelBuilder.Entity("WebApplication2.Models.BuyerDocument", b =>
                {
                    b.Property<int>("BuyerDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuyerDocumentId"));

                    b.Property<string>("AIFId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdditionalPOI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthCertificate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cb1904Form")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cenomar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumberOfAIF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DOR")
                        .HasColumnType("date");

                    b.Property<string>("DeathCertificate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpirationDate1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpirationDate2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarriageCertificate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfAif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OathOfAllegiance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pb1904Form")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbIDType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProofOfBilling1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProofOfBilling2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPA_ACN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecificIncomeDocsSubmitted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpsCbId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinAuthoLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifiedTin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BuyerDocumentId");

                    b.ToTable("BuyerDocuments");
                });

            modelBuilder.Entity("WebApplication2.Models.CreditReview", b =>
                {
                    b.Property<int>("CreditReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CreditReviewId"));

                    b.Property<string>("CMAPResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("CiCompletionDate")
                        .HasColumnType("date");

                    b.Property<string>("CreditReviewRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditReviewResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedMaxTerm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstHomeInPH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighRishk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighRiskFactors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImmigrantOrNonImmigrant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("IncomeDeclaredCb")
                        .HasColumnType("float");

                    b.Property<double?>("IncomeDeclaredPb")
                        .HasColumnType("float");

                    b.Property<string>("IsBankApporvable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxTerm")
                        .HasColumnType("int");

                    b.Property<string>("NDIStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NdiCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NdiRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("NdiVsBankMaTobAmt")
                        .HasColumnType("float");

                    b.Property<double?>("NetDisposableIncome")
                        .HasColumnType("float");

                    b.Property<double?>("NetNdi")
                        .HasColumnType("float");

                    b.Property<int?>("NumberOfHomesInPH")
                        .HasColumnType("int");

                    b.Property<double?>("OtherLoans")
                        .HasColumnType("float");

                    b.Property<string>("PercentOfNdiVsMa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonaCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectOrUnitCodeOfOtherCPGIUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonForPurchase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RedTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RedTagReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalIncomeCombined")
                        .HasColumnType("float");

                    b.Property<string>("TypeOfIncome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WithOtherCPGIUnits")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CreditReviewId");

                    b.ToTable("CreditReviews");
                });

            modelBuilder.Entity("WebApplication2.Models.Property", b =>
                {
                    b.Property<int>("PropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PropertyId"));

                    b.Property<string>("BuildingPhase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PropertyId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("WebApplication2.Models.ReservationFee", b =>
                {
                    b.Property<int>("ReservationFeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationFeeId"));

                    b.Property<double>("RfAmountGMTOE_Unit")
                        .HasColumnType("float");

                    b.Property<double>("RfAmountPaidToGMTOE")
                        .HasColumnType("float");

                    b.Property<double>("RfAmountPaidToUnit")
                        .HasColumnType("float");

                    b.Property<DateOnly>("RfDateCredited")
                        .HasColumnType("date");

                    b.Property<DateOnly>("RfDatePaid")
                        .HasColumnType("date");

                    b.Property<string>("RfOrNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReservationFeeId");

                    b.ToTable("ReservationFees");
                });

            modelBuilder.Entity("WebApplication2.Models.SalesDocument", b =>
                {
                    b.Property<int>("SalesDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesDocumentId"));

                    b.Property<string>("AegingCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankPDCIssued")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CTSStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("CTSToDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("ComplianceDUe")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("ContractedSaleDate")
                        .HasColumnType("date");

                    b.Property<string>("CtsACN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("CtsSpaAndDOROutDate")
                        .HasColumnType("date");

                    b.Property<string>("DateNotary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DateRecievedFromSalesAdmin")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DateSubmitted")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DocsSubmissionForCiEndorsement")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("LackingDocs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthBooked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthContracted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P1OldColorStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("PDCCompletionDate")
                        .HasColumnType("date");

                    b.Property<string>("ProofOfIncomeSubmitted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RfProofUsedUponHolding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("Sa1Sa2CompletionDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("SetBDocsCompletionDate")
                        .HasColumnType("date");

                    b.Property<string>("SignedByBroker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("TotalAdaPdcsSubmitted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalPDCSRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfCTS")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SalesDocumentId");

                    b.ToTable("SalesDocuments");
                });

            modelBuilder.Entity("WebApplication2.Models.SalesProponent", b =>
                {
                    b.Property<int>("SalesProponentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesProponentId"));

                    b.Property<string>("Broker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeputyMarketingDirector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingDirector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingOfficer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PS_QC_ISM")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SalesProponentId");

                    b.ToTable("SalesProponents");
                });

            modelBuilder.Entity("WebApplication2.Models.SalesTransaction", b =>
                {
                    b.Property<int>("SalesTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesTransactionId"));

                    b.Property<int?>("BusinessPartnerId")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerDocumentId")
                        .HasColumnType("int");

                    b.Property<long>("ContractNumber")
                        .HasColumnType("bigint");

                    b.Property<int?>("CreditReviewId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("HoldingDate")
                        .HasColumnType("date");

                    b.Property<string>("Milestone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewColorStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromoDiscount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropertyId")
                        .HasColumnType("int");

                    b.Property<int?>("ReservationFeeId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesDocumentId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesProponentsId")
                        .HasColumnType("int");

                    b.Property<string>("StatusInGeneral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfSale")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SalesTransactionId");

                    b.HasIndex("BusinessPartnerId");

                    b.HasIndex("BuyerDocumentId");

                    b.HasIndex("CreditReviewId");

                    b.HasIndex("PropertyId");

                    b.HasIndex("ReservationFeeId")
                        .IsUnique()
                        .HasFilter("[ReservationFeeId] IS NOT NULL");

                    b.HasIndex("SalesDocumentId");

                    b.HasIndex("SalesProponentsId");

                    b.ToTable("SalesTransactions");
                });

            modelBuilder.Entity("WebApplication2.Models.SalesTransaction", b =>
                {
                    b.HasOne("WebApplication2.Models.BusinessPartner", "BusinessPartner")
                        .WithMany("SalesTransaction")
                        .HasForeignKey("BusinessPartnerId");

                    b.HasOne("WebApplication2.Models.BuyerDocument", "BuyerDocument")
                        .WithMany("SalesTransaction")
                        .HasForeignKey("BuyerDocumentId");

                    b.HasOne("WebApplication2.Models.CreditReview", "CreditReview")
                        .WithMany("SalesTransaction")
                        .HasForeignKey("CreditReviewId");

                    b.HasOne("WebApplication2.Models.Property", "Properties")
                        .WithMany("SalesTransaction")
                        .HasForeignKey("PropertyId");

                    b.HasOne("WebApplication2.Models.ReservationFee", "ReservationFee")
                        .WithOne("SalesTransaction")
                        .HasForeignKey("WebApplication2.Models.SalesTransaction", "ReservationFeeId");

                    b.HasOne("WebApplication2.Models.SalesDocument", "SalesDocument")
                        .WithMany("SalesTransaction")
                        .HasForeignKey("SalesDocumentId");

                    b.HasOne("WebApplication2.Models.SalesProponent", "SalesProponent")
                        .WithMany("SalesTransaction")
                        .HasForeignKey("SalesProponentsId");

                    b.Navigation("BusinessPartner");

                    b.Navigation("BuyerDocument");

                    b.Navigation("CreditReview");

                    b.Navigation("Properties");

                    b.Navigation("ReservationFee");

                    b.Navigation("SalesDocument");

                    b.Navigation("SalesProponent");
                });

            modelBuilder.Entity("WebApplication2.Models.BusinessPartner", b =>
                {
                    b.Navigation("SalesTransaction");
                });

            modelBuilder.Entity("WebApplication2.Models.BuyerDocument", b =>
                {
                    b.Navigation("SalesTransaction");
                });

            modelBuilder.Entity("WebApplication2.Models.CreditReview", b =>
                {
                    b.Navigation("SalesTransaction");
                });

            modelBuilder.Entity("WebApplication2.Models.Property", b =>
                {
                    b.Navigation("SalesTransaction");
                });

            modelBuilder.Entity("WebApplication2.Models.ReservationFee", b =>
                {
                    b.Navigation("SalesTransaction")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication2.Models.SalesDocument", b =>
                {
                    b.Navigation("SalesTransaction");
                });

            modelBuilder.Entity("WebApplication2.Models.SalesProponent", b =>
                {
                    b.Navigation("SalesTransaction");
                });
#pragma warning restore 612, 618
        }
    }
}
