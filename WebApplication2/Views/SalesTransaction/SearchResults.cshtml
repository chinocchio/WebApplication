@using Microsoft.EntityFrameworkCore
@inject WebApplication2.Data.DataContext _context
@model WebApplication2.ViewModels.PropertyListViewModel
@using System.Linq
@using Microsoft.AspNetCore.Html
@functions {
    public IHtmlContent Highlight(string input, string searchTerm)
    {
        if (string.IsNullOrEmpty(searchTerm) || string.IsNullOrEmpty(input))
            return new HtmlString(input ?? "");
        var regex = new System.Text.RegularExpressions.Regex(
            System.Text.RegularExpressions.Regex.Escape(searchTerm),
            System.Text.RegularExpressions.RegexOptions.IgnoreCase);
        var result = regex.Replace(input, m => $"<mark>{m.Value}</mark>");
        return new HtmlString(result);
    }
}
@{
    ViewData["Title"] = "Search Results";
    Layout = "_Layout";
}

<!-- Spinner Overlay, parang loading ng buhay mo pag naghihintay ka ng reply. -->
<div id="spinnerOverlay" style="display:none; position:fixed; top:0; left:0; width:100vw; height:100vh; background:rgba(255,255,255,0.7); z-index:2000; align-items:center; justify-content:center;">
    <div class="spinner-border text-success" style="width: 4rem; height: 4rem;" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
</div>

<!-- Style section, dito mo palalabasin ang tunay mong galing sa design. -->
<style>
    :root {
        --primary-bg: #fff;
        --primary-text: #222;
        --card-bg: #fff;
        --border-color: #e0e0e0;
        --table-header-bg: #f8f9fa;
        --table-row-hover: #f1f3f4;
        --badge-success-bg: #198754;
        --badge-danger-bg: #dc3545;
        --badge-warning-bg: #ffc107;
        --badge-secondary-bg: #6c757d;
        --alert-info-bg: #d1ecf1;
        --alert-info-text: #0c5460;
        --alert-success-bg: #d4edda;
        --alert-success-text: #155724;
        --alert-warning-bg: #fff3cd;
        --alert-warning-text: #856404;
    }
    /* Dark mode, para sa mga ayaw sa liwanag ng katotohanan. */
    body.dark-mode {
        --primary-bg: #181a1b;
        --primary-text: #f1f1f1;
        --card-bg: #23272b;
        --border-color: #343a40;
        --table-header-bg: #23272b;
        --table-row-hover: #23272b;
        --badge-success-bg: #25a244;
        --badge-danger-bg: #e63946;
        --badge-warning-bg: #ffd166;
        --badge-secondary-bg: #adb5bd;
        --alert-info-bg: #22313a;
        --alert-info-text: #b8e0ef;
        --alert-success-bg: #223a2a;
        --alert-success-text: #b8efc2;
        --alert-warning-bg: #4d4a1a;
        --alert-warning-text: #ffe066;
    }
    /* Container, parang balot ng lumpia. Dito lahat ng laman! */
    body, .container {
        background: var(--primary-bg) !important;
        color: var(--primary-text) !important;
        transition: background 0.3s, color 0.3s;
    }
    /* Card, para sa mga gusto ng sosyal na table. */
    .card, .form-card, .card-body, .bg-light {
        background: var(--card-bg) !important;
        color: var(--primary-text) !important;
        border-color: var(--border-color) !important;
        transition: background 0.3s, color 0.3s, border-color 0.3s;
    }
    /* Table header, parang teacher na mahilig magturo. */
    .table th {
        background: var(--table-header-bg) !important;
        color: var(--primary-text) !important;
    }
    /* Table row hover, para sa mga mahilig mag-stalk. */
    .table tr:hover {
        background: var(--table-row-hover) !important;
    }
    /* Badge, parang medalya ng mga achiever. */
    .badge.bg-success {
        background: var(--badge-success-bg) !important;
        color: #fff !important;
    }
    .badge.bg-danger {
        background: var(--badge-danger-bg) !important;
        color: #fff !important;
    }
    .badge.bg-warning {
        background: var(--badge-warning-bg) !important;
        color: #222 !important;
    }
    .badge.bg-secondary {
        background: var(--badge-secondary-bg) !important;
        color: #fff !important;
    }
    /* Alert, para sa mga mahilig magpaalala. */
    .alert-info {
        background: var(--alert-info-bg) !important;
        color: var(--alert-info-text) !important;
        border: none;
    }
    .alert-success {
        background: var(--alert-success-bg) !important;
        color: var(--alert-success-text) !important;
        border: none;
    }
    .alert-warning, .text-bg-warning {
        background: var(--alert-warning-bg) !important;
        color: var(--alert-warning-text) !important;
        border: none;
    }
    /* Table primary, parang honor student ng table rows. */
    .table-primary {
        background: rgba(0,123,255,0.08) !important;
        color: var(--primary-text) !important;
    }
    /* Tabs, para sa mga mahilig mag-multitask. */
    .nav-tabs .nav-link.active {
        background: var(--card-bg) !important;
        color: var(--primary-text) !important;
        border-color: var(--border-color) var(--border-color) var(--card-bg) !important;
    }
    .nav-tabs .nav-link {
        color: var(--primary-text) !important;
        transition: color 0.3s;
    }
    .tab-content {
        background: var(--card-bg) !important;
        color: var(--primary-text) !important;
        border-color: var(--border-color) !important;
    }
    /* Spinner overlay for dark mode, para sa mga ayaw magpahuli sa loading. */
    #spinnerOverlay {
        background: rgba(24,26,27,0.7);
    }
    /* Tab pane, parang kwarto ng magkakapatid. May kanya-kanyang mundo! */
    .tab-pane.fade {
        transition: opacity 0.5s ease, transform 0.5s cubic-bezier(.4,2,.6,1);
        opacity: 0;
        transform: translateY(20px);
    }
    .tab-pane.fade.show.active {
        opacity: 1;
        transform: translateY(0);
    }
    .badge-lightgreen {
        background-color: #a5d6a7 !important; /* matches your --primary-light */
        color: #195c4b !important;           /* matches your --primary-color */
        border-radius: 8px;
        padding: 0.25em 0.75em;
        font-weight: 600;
        font-size: 0.95em;
        border: none;
    }
    /* Action Buttons Styling */
    .btn-group {
        display: flex;
        gap: 0.25rem;
        align-items: center;
    }

    .btn-group .btn {
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        transition: all 0.2s ease-in-out;
        position: relative;
        overflow: hidden;
    }

    .btn-group .btn i {
        font-size: 0.875rem;
        transition: transform 0.2s ease;
    }

    .btn-group .btn:hover i {
        transform: scale(1.1);
    }

    .btn-group .btn-outline-primary {
        color: #0d6efd;
        border-color: #0d6efd;
        background-color: rgba(13, 110, 253, 0.05);
    }

    .btn-group .btn-outline-primary:hover {
        color: #fff;
        background-color: #0d6efd;
        border-color: #0d6efd;
        box-shadow: 0 2px 4px rgba(13, 110, 253, 0.2);
    }

    .btn-group .btn-outline-danger {
        color: #dc3545;
        border-color: #dc3545;
        background-color: rgba(220, 53, 69, 0.05);
    }

    .btn-group .btn-outline-danger:hover {
        color: #fff;
        background-color: #dc3545;
        border-color: #dc3545;
        box-shadow: 0 2px 4px rgba(220, 53, 69, 0.2);
    }

    .btn-group .btn-outline-info {
        color: #0dcaf0;
        border-color: #0dcaf0;
        background-color: rgba(13, 202, 240, 0.05);
    }

    .btn-group .btn-outline-info:hover {
        color: #fff;
        background-color: #0dcaf0;
        border-color: #0dcaf0;
        box-shadow: 0 2px 4px rgba(13, 202, 240, 0.2);
    }

    /* Dark mode button styles */
    body.dark-mode .btn-group .btn-outline-primary {
        color: #6ea8fe;
        border-color: #6ea8fe;
        background-color: rgba(110, 168, 254, 0.1);
    }

    body.dark-mode .btn-group .btn-outline-primary:hover {
        color: #fff;
        background-color: #6ea8fe;
        border-color: #6ea8fe;
    }

    body.dark-mode .btn-group .btn-outline-danger {
        color: #f87171;
        border-color: #f87171;
        background-color: rgba(248, 113, 113, 0.1);
    }

    body.dark-mode .btn-group .btn-outline-danger:hover {
        color: #fff;
        background-color: #f87171;
        border-color: #f87171;
    }

    body.dark-mode .btn-group .btn-outline-info {
        color: #67e8f9;
        border-color: #67e8f9;
        background-color: rgba(103, 232, 249, 0.1);
    }

    body.dark-mode .btn-group .btn-outline-info:hover {
        color: #fff;
        background-color: #67e8f9;
        border-color: #67e8f9;
    }

    /* Tooltip customization */
    .tooltip {
        font-size: 0.875rem;
    }

    .tooltip .tooltip-inner {
        padding: 0.5rem 0.75rem;
        border-radius: 4px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    /* Toast customization */
    .toast {
        position: fixed;
        top: 1rem;
        right: 1rem;
        z-index: 1050;
        min-width: 300px;
        background-color: #fff;
        border: none;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }

    .toast.bg-success {
        background-color: #198754 !important;
    }

    .toast .toast-body {
        display: flex;
        align-items: center;
        padding: 1rem;
        color: #fff;
    }

    .toast .toast-body i {
        margin-right: 0.5rem;
        font-size: 1.25rem;
    }

    /* Loading spinner enhancement */
    #spinnerOverlay {
        background: rgba(255, 255, 255, 0.8);
        backdrop-filter: blur(4px);
    }

    body.dark-mode #spinnerOverlay {
        background: rgba(0, 0, 0, 0.8);
    }

    .spinner-border {
        width: 3rem;
        height: 3rem;
        border-width: 0.25rem;
    }

    /* Empty Search Message Styling */
    .empty-search-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        min-height: 60vh;
        text-align: center;
        padding: 2rem;
    }

    .empty-search-icon {
        width: 120px;
        height: 120px;
        margin-bottom: 1.5rem;
        color: #6c757d;
        opacity: 0.7;
    }

    .empty-search-message {
        max-width: 500px;
        margin: 0 auto;
    }

    .empty-search-message h4 {
        color: #495057;
        margin-bottom: 1rem;
        font-weight: 600;
    }

    .empty-search-message p {
        color: #6c757d;
        margin-bottom: 0.5rem;
    }

    .search-tips {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 1rem;
        margin-top: 1.5rem;
        max-width: 400px;
    }

    .search-tips ul {
        list-style: none;
        padding-left: 0;
        margin-bottom: 0;
    }

    .search-tips li {
        color: #6c757d;
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
    }

    .search-tips li i {
        margin-right: 0.5rem;
        color: #0d6efd;
    }

    /* Dark mode styles */
    body.dark-mode .empty-search-message h4 {
        color: #e9ecef;
    }

    body.dark-mode .empty-search-message p,
    body.dark-mode .search-tips li {
        color: #adb5bd;
    }

    body.dark-mode .empty-search-icon {
        color: #adb5bd;
    }

    body.dark-mode .search-tips {
        background-color: #2b3035;
    }

    body.dark-mode .search-tips li i {
        color: #6ea8fe;
    }

    .badge-orange {
        background-color: #ff9800 !important;
        color: #fff !important;
        border-radius: 8px;
        padding: 0.25em 0.75em;
        font-weight: 600;
        letter-spacing: 1px;
        font-size: 0.95em;
        display: inline-block;
    }

    /* Search highlight styling */
    mark {
        background-color: var(--primary-color) !important;
        color: white !important;
        padding: 0.1em 0.3em;
        border-radius: 3px;
        font-weight: 500;
    }

    body.dark-mode mark {
        background-color: var(--primary-light) !important;
        color: var(--primary-color) !important;
    }

    /* Update modal styles */
    .modal-backdrop {
        display: none !important;
    }
    .modal-backdrop.show {
        display: none !important;
    }
    .modal {
        z-index: 1050 !important;
        pointer-events: none !important;
        background: transparent !important;
    }
    .modal-dialog {
        margin: 1.75rem auto;
        max-width: 500px;
        position: relative;
        z-index: 1051 !important;
        pointer-events: auto !important;
    }
    .modal-content {
        position: relative;
        background-color: #fff;
        border: 1px solid rgba(0, 0, 0, 0.2);
        border-radius: 0.3rem;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        pointer-events: auto !important;
    }
    .modal-content * {
        pointer-events: auto !important;
    }
</style>

@* Add Bootstrap Icons CDN if not already present *@
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<!-- Container, parang lunchbox ng estudyante. Dito lahat ng baon mo! -->
<div class="container mt-4">
   
    <h2>Search Results</h2>
    
    @if (string.IsNullOrWhiteSpace(ViewBag.SearchTerm))
    {
        <div class="empty-search-container">
            <svg class="empty-search-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M21 21L15 15M17 10C17 13.866 13.866 17 10 17C6.13401 17 3 13.866 3 10C3 6.13401 6.13401 3 10 3C13.866 3 17 6.13401 17 10Z" 
                      stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            <div class="empty-search-message">
                <h4>Please Enter a Search Term</h4>
                <p>To find sales transactions, please enter a search term in the search box above.</p>
                <div class="search-tips">
                    <p class="mb-2"><strong>Search Tips:</strong></p>
                    <ul>
                        <li><i class="bi bi-check-circle-fill"></i>Search by contract number</li>
                        <li><i class="bi bi-check-circle-fill"></i>Search by buyer's name</li>
                        <li><i class="bi bi-check-circle-fill"></i>Search by property unit code</li>
                        <li><i class="bi bi-check-circle-fill"></i>Search by customer code</li>
                    </ul>
                </div>
            </div>
        </div>
    }
    else if (ViewBag.SalesTransactions != null && ViewBag.SalesTransactions.Count > 0)
    {
        <!-- Alert, parang text ng nanay mo pag late ka na. -->
        <div class="alert alert-info">
            Showing results for: <strong>@ViewBag.SearchTerm</strong>
        </div>

        <!-- Result count, parang attendance check sa klase. -->
        <div class="mb-3">
            <span class="badge bg-success fs-6">
                @ViewBag.SalesTransactions.Count result@(ViewBag.SalesTransactions.Count == 1 ? "" : "s") found for:
                <strong>@ViewBag.SearchTerm</strong>
            </span>
        </div>

        <!-- Tabs, parang barkadahan na may kanya-kanyang trip. -->
        <ul class="nav nav-tabs mt-4" id="transactionTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <a class="nav-link active" id="sales-tab" data-bs-toggle="tab" href="#sales" role="tab">
                    <i class="bi bi-bar-chart"></i> Sales Info
                </a>
            </li>
            <li class="nav-item" role="presentation">
                <a class="nav-link" id="buyer-tab" data-bs-toggle="tab" href="#buyer" role="tab">
                    <i class="bi bi-person-lines-fill"></i> Buyer Info
                </a>
            </li>
            <li class="nav-item" role="presentation">
                <a class="nav-link" id="property-tab" data-bs-toggle="tab" href="#property" role="tab">
                    <i class="bi bi-house-door"></i> Property Info
                </a>
            </li>
            <li class="nav-item" role="presentation">
                <a class="nav-link" id="proponent-tab" data-bs-toggle="tab" href="#proponent" role="tab">
                    <i class="bi bi-people"></i> Sales Proponent Info
                </a>
            </li>
        </ul>

        <!-- Tab content, parang group chat na may topic bawat isa. -->
        <div class="tab-content border p-3" id="transactionTabsContent">
            <div class="tab-pane fade show active" id="sales" role="tabpanel">
                <!-- Table, parang roll call ng tropa. -->
                <table class="table mt-3 d-none d-md-table">
                    <thead>
                        <tr>
                            <th>Contract Number</th>
                            <th>Type of Sale</th>
                            <th>Holding Date</th>
                            <th>Promo Discount</th>
                            <th>Transaction Type</th>
                            <th>Milestone</th>
                            <th>Status Color</th>
                            <th>Status In General</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in ViewBag.SalesTransactions)
                        {
                            var transaction = item.SalesTransaction;
                            var targetId = $"details_{transaction.SalesTransactionId}";

                            <tr class="clickable-row table-primary" style="cursor:pointer;" data-bs-target="@targetId">
                                <td>@Highlight(transaction.ContractNumber?.ToString(), ViewBag.SearchTerm as string)</td>
                                <td>@transaction.TypeOfSale</td>
                                <td>@transaction.HoldingDate.ToString("MM/dd/yyyy")</td>
                                <td>@transaction.PromoDiscount</td>
                                <td>@transaction.TransactionType</td>
                                <td>@transaction.Milestone</td>
                                <td>
                                    @if (transaction.NewColorStatus?.ToUpper() == "GREEN") {
                                        <span class="badge bg-success-subtle text-success fw-bold px-3 py-1">GREEN</span>
                                    } else if (transaction.NewColorStatus?.ToUpper() == "YELLOW") {
                                        <span class="badge bg-warning-subtle text-warning fw-bold px-3 py-1">YELLOW</span>
                                    } else if (transaction.NewColorStatus?.ToUpper() == "RED") {
                                        <span class="badge bg-danger-subtle text-danger fw-bold px-3 py-1">RED</span>
                                    } else if (transaction.NewColorStatus?.ToUpper() == "LIGHT GREEN") {
                                        <span class="badge bg-success-subtle text-success fw-bold px-3 py-1">LIGHT GREEN</span>
                                    } else if (transaction.NewColorStatus?.ToUpper() == "ORANGE") {
                                        <span class="badge-orange">ORANGE</span>
                                    } else {
                                        <span class="badge bg-secondary">@transaction.NewColorStatus</span>
                                    }
                                </td>
                                <td>@transaction.StatusInGeneral</td>
                                <td>
                                    <div class="btn-group">
                                        <a asp-controller="SalesTransaction" asp-action="Edit" asp-route-id="@transaction.SalesTransactionId" 
                                           class="btn btn-sm btn-outline-primary" 
                                           data-bs-toggle="tooltip" 
                                           data-bs-placement="top" 
                                           title="Edit Transaction">
                                            <i class="bi bi-pencil-fill"></i>
                                        </a>
                                       
                                        <button type="button" 
                                                class="btn btn-sm btn-outline-info" 
                                                onclick="toggleDetails('@targetId')"
                                                data-bs-toggle="tooltip"
                                                data-bs-placement="top"
                                                title="View Transaction Details">
                                            <i class="bi bi-info-circle-fill"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>

                            <tr id="@targetId" class="d-none bg-light">
                                <td colspan="8">
                                    <!-- Sales Document and Credit Review Tabs -->
                                    <ul class="nav nav-tabs mt-3" id="salesDocTabs_@transaction.SalesTransactionId" role="tablist">
                                        <li class="nav-item" role="presentation">
                                            <button class="nav-link active" id="salesDoc-tab-@transaction.SalesTransactionId" data-bs-toggle="tab" data-bs-target="#salesDocContent-@transaction.SalesTransactionId" type="button" role="tab">
                                                Documents
                                            </button>
                                        </li>
                                        <li class="nav-item" role="presentation">
                                            <button class="nav-link" id="resarvationFee-tab-@transaction.SalesTransactionId" data-bs-toggle="tab" data-bs-target="#resarvationFeeContent-@transaction.SalesTransactionId" type="button" role="tab">
                                                Payment Term 
                                            </button>
                                        </li>
                                        <li class="nav-item" role="presentation">
                                            <button class="nav-link" id="buyerLedger-tab-@transaction.SalesTransactionId" data-bs-toggle="tab" data-bs-target="#buyerLedgerContent-@transaction.SalesTransactionId" type="button" role="tab">
                                                Buyer's Ledger
                                            </button>
                                        </li>
                                    </ul>

                                    <!-- Tab content for Document submitted -->
                                    <div class="tab-content p-3 border" id="salesDocTabsContent_@transaction.SalesTransactionId">
                                        <div class="tab-pane fade show active" id="salesDocContent-@transaction.SalesTransactionId" role="tabpanel">
                                            <!-- Submitted Documents Section -->
                                            @if (item.SubmittedDocuments != null && item.SubmittedDocuments.Count > 0)
                                            {
                                                <div class="card mb-4">
                                                    <div class="card-header bg-success text-white">
                                                        <strong>
                                                            Submitted Documents
                                                            <span class="badge bg-danger" style="font-size: 0.60rem; vertical-align: middle;">
                                                                @item.SubmittedDocuments.Count
                                                            </span>
                                                        </strong>
                                                    </div>
                                                    <div class="card-body p-3">
                                                        <table class="table table-bordered table-striped table-sm text-center align-middle">
                                                            <thead class="table-light">
                                                                <tr>
                                                                    <th>Document Code</th>
                                                                    <th>Document Name</th>
                                                                    <th>Customer Code</th>
                                                                    <th>Date Submitted</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                @foreach (var doc in item.SubmittedDocuments)
                                                                {
                                                                    <tr>
                                                                        <td>@doc.DocumentCode</td>
                                                                        <td>@doc.DocumentName</td>
                                                                        <td>@doc.CustomerCode</td>
                                                                        <td>@(doc.DateSubmitted?.ToString("MM/dd/yyyy"))</td>
                                                                    </tr>
                                                                }
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                <p>No submitted documents.</p>
                                            }

                                            <!-- Required Documents Section -->
                                            @if (item.DocumentsForSubmission != null && item.DocumentsForSubmission.Count > 0)
                                            {
                                                <div class="card mb-4">
                                                    <div class="card-header bg-success text-white">
                                                        <strong>
                                                            Required Documents
                                                            <span class="badge bg-danger" style="font-size: 0.60rem; vertical-align: middle;">
                                                                @item.DocumentsForSubmission.Count
                                                            </span>
                                                        </strong>
                                                    </div>
                                                    <div class="card-body p-3">
                                                        <table class="table table-bordered table-striped table-sm text-center align-middle">
                                                            <thead class="table-light">
                                                                <tr>
                                                                    <th>Document Code</th>
                                                                    <th>Document Name</th>
                                                                    <th>Finance Type</th>
                                                                    <th>Location</th>
                                                                    <th>Source of Income</th>
                                                                    <th>Group</th>
                                                                    <th>Actions</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                @foreach (var reqDoc in item.DocumentsForSubmission)
                                                                {
                                                                    <tr>
                                                                        <td>@reqDoc.DocumentCode</td>
                                                                        <td>@reqDoc.DocumentName</td>
                                                                        <td>@reqDoc.DocumentFinanceType</td>
                                                                        <td>@reqDoc.DocumentLocation</td>
                                                                        <td>@reqDoc.DocumentSourceOfIncome</td>
                                                                        <td>@reqDoc.DocumentGroup</td>
                                                                        <td>
                                                                            <button type="button" 
                                                                                    class="btn btn-sm btn-success mark-submitted" 
                                                                                    data-bs-toggle="modal" 
                                                                                    data-bs-target="#markSubmittedModal"
                                                                                    data-document-code="@reqDoc.DocumentCode"
                                                                                    data-document-name="@reqDoc.DocumentName"
                                                                                    data-contract-number="@transaction.ContractNumber"
                                                                                    data-customer-code="@transaction.BusinessPartner?.CustomerCode"
                                                                                    data-unit-code="@transaction.Properties?.UnitCode">
                                                                                <i class="bi bi-check-circle"></i> Mark as Submitted
                                                                            </button>
                                                                        </td>
                                                                    </tr>
                                                                }
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                <p class="text-muted">No required documents listed.</p>
                                            }
                                        </div>

                                        <div class="tab-pane fade" id="resarvationFeeContent-@transaction.SalesTransactionId" role="tabpanel">
                                            @if (transaction.PaymentTerm != null)
                                            {
                                                <dl class="row">
                                                    <dt class="col-sm-3">RF AMOUNT PAID TO UNIT:</dt>
                                                    <dd class="col-sm-9">@transaction.PaymentTerm.RfAmountPaidToUnit</dd>

                                                    <dt class="col-sm-3">RF AMOUNT PAID TO GMTOE:</dt>
                                                    <dd class="col-sm-9">@transaction.PaymentTerm.RfAmountPaidToGMTOE</dd>

                                                    <dt class="col-sm-3">TOTAL:</dt>
                                                    <dd class="col-sm-9">@transaction.PaymentTerm.RfAmountGMTOE_Unit</dd>

                                                    <dt class="col-sm-3">RF CREDITED:</dt>
                                                    <dd class="col-sm-9">@transaction.PaymentTerm.RfDateCredited</dd>

                                                    <dt class="col-sm-3">RF OR NUMBER:</dt>
                                                    <dd class="col-sm-9">@transaction.PaymentTerm.RfOrNumber</dd>

                                                    <dt class="col-sm-3">PAYMENT TERM:</dt>
                                                    <dd class="col-sm-9">@transaction.PaymentTerm.Paymentterm</dd>

                                                    <dt class="col-sm-3">% TOB:</dt>
                                                    <dd class="col-sm-9">@transaction.PaymentTerm.PercentTOB</dd>

                                                    <dt class="col-sm-3">TOB MODE OF PAYMENT BANK/CASH:</dt>
                                                    <dd class="col-sm-9">@transaction.PaymentTerm.TOBModeOfPayment</dd>

                                                    <dt class="col-sm-3">TOB:</dt>
                                                    <dd class="col-sm-9">@transaction.PaymentTerm.TOB</dd>

                                                    <dt class="col-sm-3">ESTIMATED BANK MA at 7.5%:</dt>
                                                    <dd class="col-sm-9">@transaction.PaymentTerm.EstimatedBankMAFor7Point5Percent</dd>

                                                    <dt class="col-sm-3">START DATE ( 1st MA):</dt>
                                                    <dd class="col-sm-9">@transaction.PaymentTerm.StartDate1stMA</dd>

                                                    <dt class="col-sm-3">UNIT/PARKING:</dt>
                                                    <dd class="col-sm-9">@transaction.PaymentTerm.UnitParking</dd>

                                                    <dt class="col-sm-3">TRANSFER FEE:</dt>
                                                    <dd class="col-sm-9">@transaction.PaymentTerm.TransferFee</dd>

                                                    <dt class="col-sm-3">AMOUNT PAID TO UNIT:</dt>
                                                    <dd class="col-sm-9">@transaction.PaymentTerm.AmountPaidToUnit</dd>

                                                    <dt class="col-sm-3">AMOUNT PAID TO TRANSFER FEE:</dt>
                                                    <dd class="col-sm-9">@transaction.PaymentTerm.AmountPaidToTF</dd>

                                                    <dt class="col-sm-3">DATE PAID:</dt>
                                                    <dd class="col-sm-9">@transaction.PaymentTerm.DatePaid</dd>

                                                    <dt class="col-sm-3">FIRST MA OR NUMBER:</dt>
                                                    <dd class="col-sm-9">@transaction.PaymentTerm.FirstMAOrNumber</dd>

                                                    <dt class="col-sm-3">PAYMENT DUE DATE:</dt>
                                                    <dd class="col-sm-9">@transaction.PaymentTerm.PaymentDueDate</dd>
                                                </dl>
                                            }
                                            else
                                            {
                                                <em class="text-muted">No payment term data available.</em>
                                            }
                                        </div>

                                        <div class="tab-pane fade" id="buyerLedgerContent-@transaction.SalesTransactionId" role="tabpanel">
                                            @* Show success/error messages *@
                                            @if (TempData["LedgerSuccess"] != null)
                                            {
                                                <div class="alert alert-success">@TempData["LedgerSuccess"]</div>
                                            }
                                            @if (TempData["LedgerError"] != null)
                                            {
                                                <div class="alert alert-danger">@TempData["LedgerError"]</div>
                                            }
                                            
                                            <div class="d-flex justify-content-end mb-3">
                                                <button type="button" 
                                                        class="btn btn-success" 
                                                        data-bs-toggle="modal" 
                                                        data-bs-target="#addLedgerModal"
                                                        data-contract-number="@transaction.ContractNumber"
                                                        data-unit-code="@transaction.Properties?.UnitCode"
                                                        data-customer-code="@transaction.BusinessPartner?.CustomerCode">
                                                    <i class="bi bi-plus-circle me-2"></i>Add Buyer's Ledger Entry
                                                </button>
                                            </div>

                                            @if (item.BuyerLedgers != null && item.BuyerLedgers.Count > 0)
                                            {
                                                <div class="card mb-4">
                                                    <div class="card-header bg-success text-white">
                                                        <strong>
                                                            Buyer's Ledger Entries
                                                            <span class="badge bg-danger" style="font-size: 0.60rem; vertical-align: middle;">
                                                                @item.BuyerLedgers.Count
                                                            </span>
                                                        </strong>
                                                    </div>
                                                    <div class="card-body p-3">
                                                        <table class="table table-bordered table-striped table-sm text-center align-middle">
                                                            <thead class="table-light">
                                                                <tr>
                                                                    <th>Customer Code</th>
                                                                    <th>Unit Code</th>
                                                                    <th>Paid FT</th>
                                                                    <th>INV.NO.</th>
                                                                    <th>Amount Due</th>
                                                                    <th>Paid Mode</th>
                                                                    <th>When Due</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                @foreach (var ledger in item.BuyerLedgers)
                                                                {
                                                                    <tr>
                                                                        <td>@ledger.CustomerCode</td>
                                                                        <td>@ledger.UnitCode</td>
                                                                        <td>@ledger.PaymentNumber</td>
                                                                        <td>@ledger.PaymentReferenceDocNumber</td>
                                                                        <td>@ledger.AmountDue.ToString("N2")</td>
                                                                        <td>@ledger.PaymentReferenceDocType</td>
                                                                        <td>@ledger.WhenDue</td>
                                                                    </tr>
                                                                }
                                                                <tr class="table-secondary fw-bold">
                                                                    <td colspan="4" class="text-end">Total Amount Due:</td>
                                                                    <td>
                                                                        @{
                                                                            decimal totalAmountDue = 0m;
                                                                            foreach (var ledger in item.BuyerLedgers)
                                                                            {
                                                                                totalAmountDue += (decimal)(ledger.AmountDue ?? 0);
                                                                            }
                                                                        }
                                                                        @totalAmountDue.ToString("N2")
                                                                    </td>
                                                                    <td colspan="2"></td>
                                                                </tr>
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                <p>No ledger entries available for this contract.</p>
                                            }
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <!-- Card layout for mobile -->
                <div class="d-md-none">
                    @foreach (var item in ViewBag.SalesTransactions)
                    {
                        var transaction = item.SalesTransaction;
                        <div class="card mb-3 shadow-sm">
                            <div class="card-body">
                                <h5 class="card-title mb-2">
                                    <span class="text-success fw-bold">Contract:</span>
                                    @Highlight(transaction.ContractNumber?.ToString(), ViewBag.SearchTerm as string)
                                </h5>
                                <div class="mb-1"><strong>Type of Sale:</strong> @transaction.TypeOfSale</div>
                                <div class="mb-1"><strong>Holding Date:</strong> @transaction.HoldingDate</div>
                                <div class="mb-1"><strong>Promo Discount:</strong> @transaction.PromoDiscount</div>
                                <div class="mb-1"><strong>Transaction Type:</strong> @transaction.TransactionType</div>
                                <div class="mb-1"><strong>Milestone:</strong> @transaction.Milestone</div>
                                <div class="mb-1"><strong>Status Color:</strong> @transaction.NewColorStatus</div>
                                <div class="mb-1"><strong>Status In General:</strong> @transaction.StatusInGeneral</div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <div class="tab-pane fade" id="buyer" role="tabpanel">
                <table class="table mt-3">
                    <thead>
                        <tr>
                            <th>Client's Name</th>
                            <th>Role</th>
                            <th>Customer Code</th>
                            <th>Client Base</th>
                            <th>Contact Number</th>
                            <th>Email Address</th>
                            <th>ID Submitted</th>
                            <th>Date ID Submitted</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in ViewBag.SalesTransactions)
                        {
                            var transaction = item.SalesTransaction;
                            var processedCustomerCodes = new HashSet<string>();

                            if (transaction.BusinessPartner != null)
                            {
                                // Display Principal Buyer first
                                var principalBuyer = transaction.BusinessPartner;
                                if (!string.IsNullOrEmpty(principalBuyer.CustomerCode) && 
                                    !processedCustomerCodes.Contains($"{transaction.ContractNumber}-{principalBuyer.CustomerCode}-{principalBuyer.Role}"))
                                {
                                    <tr class="table-primary">
                                        <td>@principalBuyer.Fullname</td>
                                        <td>@principalBuyer.Role</td>
                                        <td>@principalBuyer.CustomerCode</td>
                                        <td>@principalBuyer.ClientBase</td>
                                        <td>@principalBuyer.ContactNumber</td>
                                        <td>@principalBuyer.EmailAddress</td>
                                        <td>@principalBuyer.IdSubmitted</td>
                                        <td>@(principalBuyer.IdDateSubmitted?.ToString("MM/dd/yyyy"))</td>
                                    </tr>
                                    processedCustomerCodes.Add($"{transaction.ContractNumber}-{principalBuyer.CustomerCode}-{principalBuyer.Role}");
                                }

                                // Display other buyers (Co-Buyer, Spouse) if they exist and haven't been processed
                                if (transaction.BusinessPartner.OtherBuyers != null && transaction.BusinessPartner.OtherBuyers.Count > 0)
                                {
                                    var otherBuyers = transaction.BusinessPartner.OtherBuyers;
                                    foreach (var buyer in otherBuyers)
                                    {
                                        if (buyer.Role != "Principal Buyer" && 
                                            !processedCustomerCodes.Contains($"{transaction.ContractNumber}-{buyer.CustomerCode}-{buyer.Role}"))
                                        {
                                            <tr>
                                                <td>@buyer.Fullname</td>
                                                <td>@buyer.Role</td>
                                                <td>@buyer.CustomerCode</td>
                                                <td>@buyer.ClientBase</td>
                                                <td>@buyer.ContactNumber</td>
                                                <td>@buyer.EmailAddress</td>
                                                <td>@buyer.IdSubmitted</td>
                                                <td>@(buyer.IdDateSubmitted?.ToString("MM/dd/yyyy"))</td>
                                            </tr>
                                            processedCustomerCodes.Add($"{transaction.ContractNumber}-{buyer.CustomerCode}-{buyer.Role}");
                                        }
                                    }
                                }
                            }
                        }
                    </tbody>
                </table>

                <!-- Credit Review Tabs -->
                <ul class="nav nav-tabs" id="creditReviewTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="personal-tab" data-bs-toggle="tab" data-bs-target="#personal" type="button" role="tab">
                            Personal Info
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="credit-tab" data-bs-toggle="tab" data-bs-target="#credit" type="button" role="tab">
                            Credit Review
                        </button>
                    </li>
                </ul>

                <div class="tab-content border p-3" id="creditReviewTabsContent">
                    <div class="tab-pane fade show active" id="personal" role="tabpanel">
                        @foreach (var item in ViewBag.SalesTransactions)
                        {
                            var transaction = item.SalesTransaction;
                            if (transaction.BusinessPartner != null)
                            {
                                <div class="card mb-4 shadow-sm border-0">
                                    <div class="card-header bg-success text-white d-flex align-items-center">
                                        <i class="bi bi-person-circle me-2"></i>
                                        
                                        <span class="badge bg-success ms-2">@transaction.BusinessPartner.Role</span>
                                    </div>
                                    <div class="card-body bg-light">
                                        <dl class="row mb-0">
                                            <dt class="col-sm-4"><i class="bi bi-person-fill text-primary me-1"></i>Full Name:</dt>
                                            <dd class="col-sm-8">@transaction.BusinessPartner.Fullname</dd>
                                            <dt class="col-sm-4"><i class="bi bi-upc text-primary me-1"></i>Customer Code:</dt>
                                            <dd class="col-sm-8">@transaction.BusinessPartner.CustomerCode</dd>
                                            <dt class="col-sm-4"><i class="bi bi-people-fill text-primary me-1"></i>Client Base:</dt>
                                            <dd class="col-sm-8">@transaction.BusinessPartner.ClientBase</dd>
                                            <dt class="col-sm-4"><i class="bi bi-telephone-fill text-primary me-1"></i>Contact Number:</dt>
                                            <dd class="col-sm-8">@transaction.BusinessPartner.ContactNumber</dd>
                                            <dt class="col-sm-4"><i class="bi bi-envelope-fill text-primary me-1"></i>Email Address:</dt>
                                            <dd class="col-sm-8">@transaction.BusinessPartner.EmailAddress</dd>
                                            <dt class="col-sm-4"><i class="bi bi-card-heading text-primary me-1"></i>ID Submitted:</dt>
                                            <dd class="col-sm-8">@transaction.BusinessPartner.IdSubmitted</dd>
                                            <dt class="col-sm-4"><i class="bi bi-calendar-date text-primary me-1"></i>ID Date Submitted:</dt>
                                            <dd class="col-sm-8">@(transaction.BusinessPartner.IdDateSubmitted?.ToString("MM/dd/yyyy"))</dd>
                                            <dt class="col-sm-4"><i class="bi bi-flag text-primary me-1"></i>Citizenship:</dt>
                                            <dd class="col-sm-8">@transaction.BusinessPartner.Citizenship</dd>
                                            <dt class="col-sm-4"><i class="bi bi-globe text-primary me-1"></i>Nationality:</dt>
                                            <dd class="col-sm-8">@transaction.BusinessPartner.Nationality</dd>
                                            <dt class="col-sm-4"><i class="bi bi-briefcase-fill text-primary me-1"></i>Job Title:</dt>
                                            <dd class="col-sm-8">@transaction.BusinessPartner.JobTitle</dd>
                                            <dt class="col-sm-4"><i class="bi bi-people text-primary me-1"></i>Demographic By Market:</dt>
                                            <dd class="col-sm-8">@transaction.BusinessPartner.DemographicByMarket</dd>
                                            <dt class="col-sm-4"><i class="bi bi-diagram-3-fill text-primary me-1"></i>Employment Category:</dt>
                                            <dd class="col-sm-8">@transaction.BusinessPartner.EmploymentCategory</dd>
                                            <dt class="col-sm-4"><i class="bi bi-building text-primary me-1"></i>Company Name:</dt>
                                            <dd class="col-sm-8">@transaction.BusinessPartner.CompanyName</dd>
                                            <dt class="col-sm-4"><i class="bi bi-bar-chart-fill text-primary me-1"></i>Industry Type:</dt>
                                            <dd class="col-sm-8">@transaction.BusinessPartner.IndustryType</dd>
                                            <dt class="col-sm-4"><i class="bi bi-geo-alt-fill text-primary me-1"></i>Employment Country:</dt>
                                            <dd class="col-sm-8">@transaction.BusinessPartner.EmploymentCountry</dd>
                                            <dt class="col-sm-4"><i class="bi bi-geo-fill text-primary me-1"></i>Employment State:</dt>
                                            <dd class="col-sm-8">@transaction.BusinessPartner.EmploymentState</dd>
                                            <dt class="col-sm-4"><i class="bi bi-geo text-primary me-1"></i>Employment Region:</dt>
                                            <dd class="col-sm-8">@transaction.BusinessPartner.EmploymentRegion</dd>
                                        </dl>
                                    </div>
                                </div>
                                @if (transaction.BusinessPartner.OtherBuyers != null && transaction.BusinessPartner.OtherBuyers.Count > 0)
                                {
                                    <div class="card mb-4 shadow-sm border-0">
                                        <div class="card-header bg-success text-white d-flex align-items-center">
                                            <i class="bi bi-people-fill me-2"></i>
                                            <strong>Other Buyers</strong>
                                        </div>
                                        <div class="card-body bg-light">
                                            @foreach (var buyer in transaction.BusinessPartner.OtherBuyers)
                                            {
                                                <div class="mb-4 border-bottom pb-3">
                                                    <h6 class="text-primary mb-2 d-flex align-items-center">
                                                        <i class="bi bi-person-badge me-2"></i>@buyer.Role
                                                        <span class="badge bg-secondary ms-2">@buyer.Role</span>
                                                    </h6>
                                                    <dl class="row mb-0">
                                                        <dt class="col-sm-4"><i class="bi bi-person-fill text-primary me-1"></i>Full Name:</dt>
                                                        <dd class="col-sm-8">@buyer.Fullname</dd>
                                                        <dt class="col-sm-4"><i class="bi bi-upc text-primary me-1"></i>Customer Code:</dt>
                                                        <dd class="col-sm-8">@buyer.CustomerCode</dd>
                                                        <dt class="col-sm-4"><i class="bi bi-people-fill text-primary me-1"></i>Client Base:</dt>
                                                        <dd class="col-sm-8">@buyer.ClientBase</dd>
                                                        <dt class="col-sm-4"><i class="bi bi-telephone-fill text-primary me-1"></i>Contact Number:</dt>
                                                        <dd class="col-sm-8">@buyer.ContactNumber</dd>
                                                        <dt class="col-sm-4"><i class="bi bi-envelope-fill text-primary me-1"></i>Email Address:</dt>
                                                        <dd class="col-sm-8">@buyer.EmailAddress</dd>
                                                        <dt class="col-sm-4"><i class="bi bi-card-heading text-primary me-1"></i>ID Submitted:</dt>
                                                        <dd class="col-sm-8">@buyer.IdSubmitted</dd>
                                                        <dt class="col-sm-4"><i class="bi bi-calendar-date text-primary me-1"></i>ID Date Submitted:</dt>
                                                        <dd class="col-sm-8">@(buyer.IdDateSubmitted?.ToString("MM/dd/yyyy"))</dd>
                                                        <dt class="col-sm-4"><i class="bi bi-flag text-primary me-1"></i>Citizenship:</dt>
                                                        <dd class="col-sm-8">@buyer.Citizenship</dd>
                                                        <dt class="col-sm-4"><i class="bi bi-globe text-primary me-1"></i>Nationality:</dt>
                                                        <dd class="col-sm-8">@buyer.Nationality</dd>
                                                        <dt class="col-sm-4"><i class="bi bi-briefcase-fill text-primary me-1"></i>Job Title:</dt>
                                                        <dd class="col-sm-8">@buyer.JobTitle</dd>
                                                        <dt class="col-sm-4"><i class="bi bi-people text-primary me-1"></i>Demographic By Market:</dt>
                                                        <dd class="col-sm-8">@buyer.DemographicByMarket</dd>
                                                        <dt class="col-sm-4"><i class="bi bi-diagram-3-fill text-primary me-1"></i>Employment Category:</dt>
                                                        <dd class="col-sm-8">@buyer.EmploymentCategory</dd>
                                                        <dt class="col-sm-4"><i class="bi bi-building text-primary me-1"></i>Company Name:</dt>
                                                        <dd class="col-sm-8">@buyer.CompanyName</dd>
                                                        <dt class="col-sm-4"><i class="bi bi-bar-chart-fill text-primary me-1"></i>Industry Type:</dt>
                                                        <dd class="col-sm-8">@buyer.IndustryType</dd>
                                                        <dt class="col-sm-4"><i class="bi bi-geo-alt-fill text-primary me-1"></i>Employment Country:</dt>
                                                        <dd class="col-sm-8">@buyer.EmploymentCountry</dd>
                                                        <dt class="col-sm-4"><i class="bi bi-geo-fill text-primary me-1"></i>Employment State:</dt>
                                                        <dd class="col-sm-8">@buyer.EmploymentState</dd>
                                                        <dt class="col-sm-4"><i class="bi bi-geo text-primary me-1"></i>Employment Region:</dt>
                                                        <dd class="col-sm-8">@buyer.EmploymentRegion</dd>
                                                    </dl>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <p class="text-muted">No personal information available for this transaction.</p>
                            }
                        }
                    </div>
                    <div class="tab-pane fade" id="credit" role="tabpanel">
                        @foreach (var item in ViewBag.SalesTransactions)
                        {
                            var transaction = item.SalesTransaction;
                            if (transaction.CreditReview != null)
                            {
                                <div class="card mb-4 shadow-sm">
                                    <div class="card-header bg-success text-white">
                                        <strong>Credit Review</strong>
                                    </div>
                                    <div class="card-body bg-light">
                                        <div class="row">
                                            <div class="col-md-4 mb-3">
                                                <strong>CI Result:</strong>
                                                @if (transaction.CreditReview.CreditReviewResult?.ToLower().Contains("clear") == true) {
                                                    <span class="text-success"><i class="bi bi-check-circle-fill" data-bs-toggle="tooltip" title="Clear with condition"></i></span>
                                                } else {
                                                    <span class="text-danger"><i class="bi bi-x-circle-fill" data-bs-toggle="tooltip" title="Not clear"></i></span>
                                                }
                                                <span class="text-dark">@transaction.CreditReview.CreditReviewResult</span><br>
                                                <strong data-bs-toggle="tooltip" title="Net Disposable Income">NDI Status:</strong>
                                                @if (transaction.CreditReview.NDIStatus?.ToLower().Contains("low") == true) {
                                                    <span class="badge bg-warning text-dark">@transaction.CreditReview.NDIStatus</span>
                                                } else {
                                                    <span class="badge bg-success">@transaction.CreditReview.NDIStatus</span>
                                                }<br>
                                                <strong>Red Tag Reason:</strong>
                                                @if (!string.IsNullOrEmpty(transaction.CreditReview.RedTagReason) && transaction.CreditReview.RedTagReason != "-") {
                                                    <span class="text-danger fw-bold">@transaction.CreditReview.RedTagReason</span>
                                                } else {
                                                    <span class="text-muted">@transaction.CreditReview.RedTagReason</span>
                                                }<br>
                                                <strong>1st Home In PH:</strong> <span>@transaction.CreditReview.FirstHomeInPH</span><br>
                                                <strong>Project/Unit No. of Other CPGI Unit:</strong> <span>@transaction.CreditReview.ProjectOrUnitCodeOfOtherCPGIUnit</span><br>
                                                <strong>Total Income (Combined):</strong> <span>@transaction.CreditReview.TotalIncomeCombined</span><br>
                                                <strong>Net Disposable Income:</strong> <span>@transaction.CreditReview.NetDisposableIncome</span><br>
                                                <strong>NDI vs Bank MA TOB Amount:</strong> <span>@transaction.CreditReview.NdiVsBankMaTobAmt</span><br>
                                                <strong>Max Term:</strong> <span>@transaction.CreditReview.MaxTerm</span><br>
                                                <strong>Immigrant/Non-Immigrant:</strong> <span>@transaction.CreditReview.ImmigrantOrNonImmigrant</span>
                                            </div>
                                            <div class="col-md-4 mb-3">
                                                <strong>CMAP Result:</strong>
                                                @if (transaction.CreditReview.CMAPResult?.ToLower().Contains("no adverse") == true) {
                                                    <span class="text-success"><i class="bi bi-shield-check" data-bs-toggle="tooltip" title="No adverse findings"></i></span>
                                                } else {
                                                    <span class="text-danger"><i class="bi bi-exclamation-triangle-fill" data-bs-toggle="tooltip" title="Adverse findings"></i></span>
                                                }
                                                <span>@transaction.CreditReview.CMAPResult</span><br>
                                                <strong>Is Bank Approvable:</strong>
                                                @if (transaction.CreditReview.IsBankApporvable?.ToLower() == "yes") {
                                                    <span class="badge bg-success">Yes</span>
                                                } else if (transaction.CreditReview.IsBankApporvable?.ToLower() == "no") {
                                                    <span class="badge bg-danger">No</span>
                                                } else {
                                                    <span class="badge bg-secondary">-</span>
                                                }<br>
                                                <strong>CI Completion Date:</strong> <span>@(transaction.CreditReview.CiCompletionDate.ToString("MM/dd/yyyy"))</span><br>
                                                <strong>Number of home in PH:</strong> <span>@transaction.CreditReview.NumberOfHomesInPH</span><br>
                                                <strong>Income Declared Principal (PHP):</strong> <span>@transaction.CreditReview.IncomeDeclaredPb</span><br>
                                                <strong>Type of Income:</strong> <span>@transaction.CreditReview.TypeOfIncome</span><br>
                                                <strong>Other Loans:</strong> <span>@transaction.CreditReview.OtherLoans</span><br>
                                                <strong>Percent of NDI vs MA:</strong> <span>@transaction.CreditReview.PercentOfNdiVsMa</span><br>
                                                <strong>Estimated Max Term:</strong> <span>@transaction.CreditReview.EstimatedMaxTerm</span><br>
                                                <strong>High Risk (Y/N):</strong>
                                                @if (transaction.CreditReview.HighRishk?.ToLower() == "yes") {
                                                    <span class="badge bg-danger">Yes</span>
                                                } else if (transaction.CreditReview.HighRishk?.ToLower() == "no") {
                                                    <span class="badge bg-success">No</span>
                                                } else {
                                                    <span class="badge bg-secondary">-</span>
                                                }
                                            </div>
                                            <div class="col-md-4 mb-3">
                                                <strong>CI Remarks:</strong> <span>@transaction.CreditReview.CreditReviewRemarks</span><br>
                                                <strong>Red Tag:</strong>
                                                @if (!string.IsNullOrEmpty(transaction.CreditReview.RedTag) && transaction.CreditReview.RedTag != "-") {
                                                    <span class="text-danger fw-bold"><i class="bi bi-exclamation-circle-fill" data-bs-toggle="tooltip" title="Red Tag"></i> @transaction.CreditReview.RedTag</span>
                                                } else {
                                                    <span class="text-muted">@transaction.CreditReview.RedTag</span>
                                                }<br>
                                                <strong>Reason For Purchase:</strong> <span>@transaction.CreditReview.ReasonForPurchase</span><br>
                                                <strong>With Other CPGI Units:</strong> <span>@transaction.CreditReview.WithOtherCPGIUnits</span><br>
                                                <strong>Income Declared Co-Borrower:</strong> <span>@transaction.CreditReview.IncomeDeclaredCb</span><br>
                                                <strong>NDI Rate:</strong> <span>@transaction.CreditReview.NdiRate</span><br>
                                                <strong>Net NDI:</strong> <span>@transaction.CreditReview.NetNdi</span><br>
                                                <strong>NDI Category:</strong> <span>@transaction.CreditReview.NdiCategory</span><br>
                                                <strong>Persona Category:</strong> <span>@transaction.CreditReview.PersonaCategory</span><br>
                                                <strong>High Risk Factor/s:</strong>
                                                @if (!string.IsNullOrEmpty(transaction.CreditReview.HighRiskFactors) && transaction.CreditReview.HighRiskFactors != "-") {
                                                    <span class="text-danger">@transaction.CreditReview.HighRiskFactors</span>
                                                } else {
                                                    <span class="text-muted">@transaction.CreditReview.HighRiskFactors</span>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <p class="text-muted">No Credit Review information available for this transaction.</p>
                            }
                        }
                    </div>
                </div>
            </div>

            <div class="tab-pane fade" id="property" role="tabpanel">
                <table class="table mt-3">
                    <thead>
                        <tr>
                            <th>Property Type</th>
                            <th>Project Name</th>
                            <th>Building/Phase</th>
                            <th>Unit Code</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in ViewBag.SalesTransactions)
                        {
                            var transaction = item.SalesTransaction;
                            <tr>
                                <td>@transaction.Properties?.PropertyType</td>
                                <td>@transaction.Properties?.ProjectName</td>
                                <td>@transaction.Properties?.BuildingPhase</td>
                                <td>@transaction.Properties?.UnitCode</td>
                                <td>
                                    <div class="btn-group">
                                        <a asp-controller="Property" asp-action="Edit" asp-route-id="@transaction.Properties?.PropertyId" class="btn btn-sm btn-outline-primary">
                                            <i class="bi bi-pencil"></i> Edit
                                        </a>
                                      
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="tab-pane fade" id="proponent" role="tabpanel">
                <table class="table mt-3">
                    <thead>
                        <tr>
                            <th>Level</th>
                            <th>Role</th>
                            <th>BP Number</th>
                            <th>Full Name</th>
                            <th>Reports To</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in ViewBag.SalesTransactions)
                        {
                            var transaction = item.SalesTransaction;
                            <tr>
                                <td colspan="6">
                                    <div class="d-flex justify-content-end mb-3">
                                        <a asp-controller="SalesProponent" asp-action="Manage" asp-route-contractNumber="@transaction.ContractNumber" class="btn btn-primary">
                                            <i class="bi bi-people me-2"></i>Manage Proponents
                                        </a>
                                    </div>
                                </td>
                            </tr>
                            for (var i = 0; i < item.ProponentHierarchy.Count; i++)
                            {
                                var proponent = item.ProponentHierarchy[i];
                                <tr class="@(i == 0 ? "table-primary" : "")">
                                    <td>
                                        <span class="badge bg-info">Level @(i + 1)</span>
                                    </td>
                                    <td>@proponent?.Roles</td>
                                    <td>@proponent?.ProponentBpNumber</td>
                                    <td>@proponent?.Fullname</td>
                                    <td>
                                        @if (string.IsNullOrEmpty(proponent?.ReportingTo))
                                        {
                                            <span class="badge bg-success">Top Level</span>
                                        }
                                        else
                                        {
                                            @proponent?.ReportingTo
                                        }
                                    </td>
                                    <td></td>
                                </tr>
                            }
                            @if (item.ProponentHierarchy.Count == 0)
                            {
                                <tr>
                                    <td colspan="6" class="text-center text-muted">
                                        <em>No proponent information available</em>
                                    </td>
                                </tr>
                            }
                            <tr><td colspan="6" class="border-bottom"></td></tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    else
    {
        <div class="empty-search-container">
            <svg class="empty-search-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" 
                      stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            <div class="empty-search-message">
                <h4>No Results Found</h4>
                <p>We couldn't find any matches for your search term: <strong>@ViewBag.SearchTerm</strong></p>
                <div class="search-tips">
                    <p class="mb-2"><strong>Suggestions:</strong></p>
                    <ul>
                        <li><i class="bi bi-lightbulb-fill"></i>Check for spelling errors</li>
                        <li><i class="bi bi-lightbulb-fill"></i>Try different keywords</li>
                        <li><i class="bi bi-lightbulb-fill"></i>Use more general terms</li>
                        <li><i class="bi bi-lightbulb-fill"></i>Verify the search term format</li>
                    </ul>
                </div>
            </div>
        </div>
    }

  
</div>

<!-- Modal for Mark as Submitted -->
<div class="modal fade" id="markSubmittedModal" tabindex="-1" aria-labelledby="markSubmittedModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header bg-success text-white">
        <h5 class="modal-title" id="markSubmittedModalLabel">
          <i class="bi bi-file-earmark-text me-2"></i>Mark Document as Submitted
        </h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="markSubmittedForm" class="row g-3">
          @Html.AntiForgeryToken()
          <input type="hidden" name="documentCode" id="modalDocumentCode">
          <input type="hidden" name="documentName" id="modalDocumentName">
          <input type="hidden" name="contractNumber" id="modalContractNumber">
          <input type="hidden" name="customerCode" id="modalCustomerCode">
          <input type="hidden" name="unitCode" id="modalUnitCode">
          <div class="col-12">
            <div class="alert alert-light border mb-3">
              <div class="row g-2">
                <div class="col-md-6">
                  <div class="d-flex align-items-center mb-2">
                    <i class="bi bi-file-earmark-text text-success me-2"></i>
                    <strong class="me-2">Document:</strong>
                    <span class="text-muted" id="modalDocumentNameDisplay"></span>
                  </div>
                  <div class="d-flex align-items-center mb-2">
                    <i class="bi bi-upc text-success me-2"></i>
                    <strong class="me-2">Code:</strong>
                    <span class="text-muted" id="modalDocumentCodeDisplay"></span>
                  </div>
                </div>
                <div class="col-md-6">
                  <div class="d-flex align-items-center mb-2">
                    <i class="bi bi-file-earmark-text text-success me-2"></i>
                    <strong class="me-2">Contract:</strong>
                    <span class="text-muted" id="modalContractNumberDisplay"></span>
                  </div>
                  <div class="d-flex align-items-center mb-2">
                    <i class="bi bi-person text-success me-2"></i>
                    <strong class="me-2">Customer:</strong>
                    <span class="text-muted" id="modalCustomerCodeDisplay"></span>
                  </div>
                  <div class="d-flex align-items-center">
                    <i class="bi bi-building text-success me-2"></i>
                    <strong class="me-2">Unit:</strong>
                    <span class="text-muted" id="modalUnitCodeDisplay"></span>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="col-md-6">
            <label class="form-label">
              <i class="bi bi-calendar-date text-success me-1"></i>
              Date Submitted
            </label>
            <input type="date" class="form-control" name="dateSubmitted" id="modalDateSubmitted" required max="@DateTime.Now.ToString("yyyy-MM-dd")">
          </div>
          <div class="col-12 mt-4">
            <div class="d-flex gap-2 justify-content-end">
              <button type="button" class="btn btn-light" data-bs-dismiss="modal">
                <i class="bi bi-x-circle me-1"></i>Cancel
              </button>
              <button type="submit" class="btn btn-success">
                <i class="bi bi-check-circle me-1"></i>Submit
              </button>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Add Buyer's Ledger Modal -->
<div class="modal fade" id="addLedgerModal" tabindex="-1" aria-labelledby="addLedgerModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title" id="addLedgerModalLabel">
                    <i class="bi bi-plus-circle me-2"></i>Add Buyer's Ledger Entry
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addLedgerForm" class="row g-3">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="ContractNumber" id="modalContractNumber">
                    <input type="hidden" name="UnitCode" id="modalUnitCode">
                    <input type="hidden" name="CustomerCode" id="modalCustomerCode">
                    
                    <div class="col-12">
                        <div class="alert alert-light border mb-3">
                            <div class="row g-2">
                                <div class="col-md-4">
                                    <div class="d-flex align-items-center mb-2">
                                        <i class="bi bi-file-earmark-text text-success me-2"></i>
                                        <strong class="me-2">Contract:</strong>
                                        <span class="text-muted" id="modalContractNumberDisplay"></span>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="d-flex align-items-center mb-2">
                                        <i class="bi bi-person text-success me-2"></i>
                                        <strong class="me-2">Customer:</strong>
                                        <span class="text-muted" id="modalCustomerCodeDisplay"></span>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="d-flex align-items-center">
                                        <i class="bi bi-building text-success me-2"></i>
                                        <strong class="me-2">Unit:</strong>
                                        <span class="text-muted" id="modalUnitCodeDisplay"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <label class="form-label">
                            <i class="bi bi-upc text-success me-1"></i>Paid FT
                        </label>
                        <input type="text" class="form-control" name="PaymentNumber" required>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">
                            <i class="bi bi-receipt text-success me-1"></i>Invoice Number
                        </label>
                        <input type="text" class="form-control" name="PaymentReferenceDocNumber" required>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">
                            <i class="bi bi-currency-dollar text-success me-1"></i>Amount Due
                        </label>
                        <input type="number" step="0.01" class="form-control" name="AmountDue" required>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">
                            <i class="bi bi-credit-card text-success me-1"></i>Payment Mode
                        </label>
                        <select class="form-select" name="PaymentReferenceDocType" required>
                            <option value="">-- Select Payment Mode --</option>
                            <option value="Cash">Cash</option>
                            <option value="Check">Check</option>
                            <option value="Bank Transfer">Bank Transfer</option>
                            <option value="Credit Card">Credit Card</option>
                        </select>
                    </div>
                    <div class="col-12 mt-4">
                        <div class="d-flex gap-2 justify-content-end">
                            <button type="button" class="btn btn-light" data-bs-dismiss="modal">
                                <i class="bi bi-x-circle me-1"></i>Cancel
                            </button>
                            <button type="submit" class="btn btn-success">
                                <i class="bi bi-check-circle me-1"></i>Submit
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Show spinner on any form submit
            document.querySelectorAll('form').forEach(function(form) {
                form.addEventListener('submit', function() {
                    document.getElementById('spinnerOverlay').style.display = 'flex';
                });
            });
            document.getElementById('spinnerOverlay').style.display = 'none';

            // Handle clickable rows
            document.querySelectorAll(".clickable-row").forEach(row => {
                row.addEventListener("click", function () {
                    const targetId = this.getAttribute("data-bs-target");
                    const contentRow = document.getElementById(targetId);
                    if (contentRow) {
                        contentRow.classList.toggle("d-none");
                    }
                });
            });

            // Initialize Bootstrap tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.forEach(function (tooltipTriggerEl) {
                new bootstrap.Tooltip(tooltipTriggerEl, {
                    trigger: 'hover',
                    animation: true,
                    delay: { show: 100, hide: 100 }
                });
            });

            // Robust tab handler for all tab groups
            document.querySelectorAll('.nav-tabs').forEach(function(tabGroup) {
                tabGroup.querySelectorAll('[data-bs-toggle="tab"]').forEach(function(tab) {
                tab.addEventListener('click', function(e) {
                    e.preventDefault();
                        // Find the parent tab group and its content
                        const tabList = tab.closest('.nav-tabs');
                        const tabContentId = tab.getAttribute('href') || tab.getAttribute('data-bs-target');
                        if (!tabContentId) return;
                        const tabContent = document.querySelector(tabContentId);
                        if (!tabContent) return;
                        // Deactivate all tabs in this group
                        tabList.querySelectorAll('.nav-link, .nav-item .nav-link, .nav-link.active').forEach(function(t) {
                            t.classList.remove('active');
                            t.setAttribute('aria-selected', 'false');
                        });
                        // Deactivate all tab panes in this group
                        const tabContentParent = tabContent.closest('.tab-content');
                        if (tabContentParent) {
                            tabContentParent.querySelectorAll('.tab-pane').forEach(function(pane) {
                            pane.classList.remove('show', 'active');
                        });
                        }
                        // Activate clicked tab and its pane
                        tab.classList.add('active');
                        tab.setAttribute('aria-selected', 'true');
                        tabContent.classList.add('show', 'active');
                        });
                });
            });

            // Improved modal handling
            const markSubmittedModal = document.getElementById('markSubmittedModal');
            if (markSubmittedModal) {
                // Initialize modal with updated options
                const modal = new bootstrap.Modal(markSubmittedModal, {
                    backdrop: false, // Remove backdrop
                    keyboard: true,
                    focus: true
                });

                // Ensure modal is properly initialized
                markSubmittedModal.addEventListener('shown.bs.modal', function () {
                    // Focus the first input when modal is shown
                    const firstInput = markSubmittedModal.querySelector('input:not([type="hidden"])');
                    if (firstInput) {
                        firstInput.focus();
                    }
                });

                // Handle modal show event
                markSubmittedModal.addEventListener('show.bs.modal', function (event) {
                    // Prevent event bubbling
                    event.stopPropagation();
                    
                    const button = event.relatedTarget;
                    if (!button) return;

                    // Populate modal fields
                    const documentCode = button.getAttribute('data-document-code');
                    const documentName = button.getAttribute('data-document-name');
                    const contractNumber = button.getAttribute('data-contract-number');
                    const customerCode = button.getAttribute('data-customer-code');
                    const unitCode = button.getAttribute('data-unit-code');

                    // Set hidden fields
                    document.getElementById('modalDocumentCode').value = documentCode;
                    document.getElementById('modalDocumentName').value = documentName;
                    document.getElementById('modalContractNumber').value = contractNumber;
                    document.getElementById('modalCustomerCode').value = customerCode;
                    document.getElementById('modalUnitCode').value = unitCode;

                    // Set display fields
                    document.getElementById('modalDocumentNameDisplay').textContent = documentName;
                    document.getElementById('modalDocumentCodeDisplay').textContent = documentCode;
                    document.getElementById('modalContractNumberDisplay').textContent = contractNumber;
                    document.getElementById('modalCustomerCodeDisplay').textContent = customerCode;
                    document.getElementById('modalUnitCodeDisplay').textContent = unitCode;

                    // Set today's date as default
                    document.getElementById('modalDateSubmitted').value = new Date().toISOString().split('T')[0];
                });

                // Handle modal form submit with improved event handling
                const markSubmittedForm = document.getElementById('markSubmittedForm');
                if (markSubmittedForm) {
                    markSubmittedForm.addEventListener('submit', async function (e) {
                        // Prevent event bubbling
                        e.preventDefault();
                        e.stopPropagation();
                        
                        // Disable submit button to prevent double submission
                        const submitButton = this.querySelector('button[type="submit"]');
                        if (submitButton) {
                            submitButton.disabled = true;
                        }

                        try {
                            document.getElementById('spinnerOverlay').style.display = 'flex';
                            
                            const formData = new FormData(this);
                            const response = await fetch('/Property/SubmitDocument', {
                                method: 'POST',
                                body: formData,
                                headers: {
                                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                                }
                            });

                            const data = await response.json();
                            
                            // Create and show toast
                            const toast = document.createElement('div');
                            toast.className = `toast ${data.success ? 'bg-success' : 'bg-danger'} text-white`;
                            toast.style.zIndex = '1060';
                            toast.innerHTML = `
                                <div class="toast-body">
                                    <i class="bi ${data.success ? 'bi-check-circle-fill' : 'bi-exclamation-circle-fill'} me-2"></i>
                                    ${data.message}
                                </div>
                            `;
                            document.body.appendChild(toast);
                            
                            const bsToast = new bootstrap.Toast(toast, {
                                autohide: true,
                                delay: 3000
                            });
                            bsToast.show();

                            if (data.success) {
                                // Hide modal and refresh after success
                                modal.hide();
                                setTimeout(() => location.reload(), 1000);
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            const toast = document.createElement('div');
                            toast.className = 'toast bg-danger text-white';
                            toast.style.zIndex = '1060';
                            toast.innerHTML = `
                                <div class="toast-body">
                                    <i class="bi bi-exclamation-circle-fill me-2"></i>
                                    An error occurred while submitting the document.
                                </div>
                            `;
                            document.body.appendChild(toast);
                            new bootstrap.Toast(toast, {
                                autohide: true,
                                delay: 3000
                            }).show();
                        } finally {
                            document.getElementById('spinnerOverlay').style.display = 'none';
                            // Re-enable submit button
                            if (submitButton) {
                                submitButton.disabled = false;
                            }
                        }
                    });
                }

                // Add click event listener to modal content to prevent event bubbling
                markSubmittedModal.querySelector('.modal-content').addEventListener('click', function(e) {
                    e.stopPropagation();
                });
            }

            // Add Buyer's Ledger Modal handling
            const addLedgerModal = document.getElementById('addLedgerModal');
            if (addLedgerModal) {
                // Initialize modal
                const ledgerModal = new bootstrap.Modal(addLedgerModal, {
                    backdrop: false,
                    keyboard: true,
                    focus: true
                });

                // Handle modal show event
                addLedgerModal.addEventListener('show.bs.modal', function (event) {
                    const button = event.relatedTarget;
                    if (!button) return;

                    // Get data from button
                    const contractNumber = button.getAttribute('data-contract-number');
                    const unitCode = button.getAttribute('data-unit-code');
                    const customerCode = button.getAttribute('data-customer-code');

                    // Set hidden fields
                    document.getElementById('modalContractNumber').value = contractNumber;
                    document.getElementById('modalUnitCode').value = unitCode;
                    document.getElementById('modalCustomerCode').value = customerCode;

                    // Set display fields
                    document.getElementById('modalContractNumberDisplay').textContent = contractNumber;
                    document.getElementById('modalUnitCodeDisplay').textContent = unitCode;
                    document.getElementById('modalCustomerCodeDisplay').textContent = customerCode;
                });

                // Handle form submission
                const addLedgerForm = document.getElementById('addLedgerForm');
                if (addLedgerForm) {
                    addLedgerForm.addEventListener('submit', async function (e) {
                        e.preventDefault();
                        e.stopPropagation();

                        const submitButton = this.querySelector('button[type="submit"]');
                        if (submitButton) {
                            submitButton.disabled = true;
                        }

                        try {
                            document.getElementById('spinnerOverlay').style.display = 'flex';

                            // Get the contract number and ensure it's a number
                            const contractNumber = parseInt(document.getElementById('modalContractNumber').value);
                            if (isNaN(contractNumber)) {
                                throw new Error('Invalid contract number format');
                            }

                            const formData = new FormData(this);
                            // Update the contract number in the form data to be a number
                            formData.set('ContractNumber', contractNumber.toString());

                            const response = await fetch('/SalesTransaction/AddBuyersLedger', {
                                method: 'POST',
                                body: formData,
                                headers: {
                                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                                }
                            });

                            const data = await response.json();

                            // Create and show toast
                            const toast = document.createElement('div');
                            toast.className = `toast ${data.success ? 'bg-success' : 'bg-danger'} text-white`;
                            toast.style.zIndex = '1060';
                            toast.innerHTML = `
                                <div class="toast-body">
                                    <i class="bi ${data.success ? 'bi-check-circle-fill' : 'bi-exclamation-circle-fill'} me-2"></i>
                                    ${data.message || (data.success ? 'Ledger entry added successfully' : 'Failed to add ledger entry')}
                                </div>
                            `;
                            document.body.appendChild(toast);

                            const bsToast = new bootstrap.Toast(toast, {
                                autohide: true,
                                delay: 3000
                            });
                            bsToast.show();

                            if (data.success) {
                                ledgerModal.hide();
                                setTimeout(() => location.reload(), 1000);
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            const toast = document.createElement('div');
                            toast.className = 'toast bg-danger text-white';
                            toast.style.zIndex = '1060';
                            toast.innerHTML = `
                                <div class="toast-body">
                                    <i class="bi bi-exclamation-circle-fill me-2"></i>
                                    ${error.message || 'An error occurred while adding the ledger entry.'}
                                </div>
                            `;
                            document.body.appendChild(toast);
                            new bootstrap.Toast(toast, {
                                autohide: true,
                                delay: 3000
                            }).show();
                        } finally {
                            document.getElementById('spinnerOverlay').style.display = 'none';
                            if (submitButton) {
                                submitButton.disabled = false;
                            }
                        }
                    });
                }

                // Add click event listener to modal content
                addLedgerModal.querySelector('.modal-content').addEventListener('click', function(e) {
                    e.stopPropagation();
                });
            }
        });
    </script>
} 