@model WebApplication2.ViewModels.SalesTransactionCreateViewModel

@{
    ViewData["Title"] = "Create Sales Transaction";
    Layout = "_Layout";
}

<style>
    .create-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
    }

    .form-card {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: 0 4px 6px rgba(0,0,0,0.05);
        margin-bottom: 2rem;
        overflow: hidden;
    }

    .card-header {
        background-color: var(--primary-color);
        color: white;
        padding: 1.25rem;
        font-weight: 600;
        border: none;
    }

    .card-body {
        padding: 2rem;
    }

    .form-label {
        font-weight: 500;
        color: var(--text-primary);
        margin-bottom: 0.5rem;
    }

    .form-control, .form-select {
        border: 2px solid rgba(0,0,0,0.1);
        border-radius: var(--border-radius);
        padding: 0.75rem 1rem;
        font-size: 1rem;
        transition: all var(--transition-speed) ease;
    }

        .form-control:focus, .form-select:focus {
            border-color: var(--primary-light);
            box-shadow: 0 0 0 3px rgba(76,175,80,0.1);
            outline: none;
        }

    .btn-group {
        display: flex;
        gap: 1rem;
        justify-content: flex-end;
        margin-top: 2rem;
    }

    .btn-primary {
        background-color: var(--primary-color);
        border: none;
        padding: 0.75rem 1.5rem;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

        .btn-primary:hover {
            background-color: var(--primary-dark);
            transform: translateY(-1px);
        }

        .btn-primary i {
            font-size: 1.1rem;
        }

    .section-title {
        color: var(--primary-color);
        font-weight: 600;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

        .section-title i {
            font-size: 1.25rem;
        }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .row {
        margin-bottom: 1rem;
    }

    .validation-message {
        color: #dc3545;
        font-size: 0.875rem;
        margin-top: 0.5rem;
    }

    /* Animation for new business partner fields */
    #newBpFields {
        transition: all var(--transition-speed) ease;
    }

        #newBpFields.hidden {
            opacity: 0;
            height: 0;
            overflow: hidden;
        }

        #newBpFields.visible {
            opacity: 1;
            height: auto;
        }
</style>

<div class="create-container">
    <div class="section-title">
        <i class="bi bi-file-earmark-plus"></i>
        <h2 class="mb-0">Create New Sales Transaction</h2>
    </div>

    <form asp-action="Create" method="post">
        @Html.AntiForgeryToken()

        <div class="form-card">
            <div class="card-header">
                <i class="bi bi-info-circle me-2"></i>Sales Transaction Information
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="ContractNumber" class="form-label">Contract Number <span class="text-danger">*</span></label>
                            <input asp-for="ContractNumber" class="form-control" required />
                            <span asp-validation-for="ContractNumber" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="TypeOfSale" class="form-label">Type of Sale <span class="text-danger">*</span></label>
                            <input asp-for="TypeOfSale" class="form-control" required />
                            <span asp-validation-for="TypeOfSale" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="HoldingDate" class="form-label">Holding Date <span class="text-danger">*</span></label>
                            <input asp-for="HoldingDate" type="date" class="form-control" required />
                            <span asp-validation-for="HoldingDate" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="TransactionType" class="form-label">Transaction Type <span class="text-danger">*</span></label>
                            <input asp-for="TransactionType" class="form-control" required />
                            <span asp-validation-for="TransactionType" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="PromoDiscount" class="form-label">Promo Discount <span class="text-danger">*</span></label>
                            <input asp-for="PromoDiscount" class="form-control" required />
                            <span asp-validation-for="PromoDiscount" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="StatusInGeneral" class="form-label">Status <span class="text-danger">*</span></label>
                            <input asp-for="StatusInGeneral" class="form-control" required />
                            <span asp-validation-for="StatusInGeneral" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Milestone" class="form-label">Milestone <span class="text-danger">*</span></label>
                            <input asp-for="Milestone" class="form-control" required />
                            <span asp-validation-for="Milestone" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="NewColorStatus" class="form-label">Color Status <span class="text-danger">*</span></label>
                            <input asp-for="NewColorStatus" class="form-control" required />
                            <span asp-validation-for="NewColorStatus" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-card">
            <div class="card-header">
                <i class="bi bi-people me-2"></i>Business Partner Information
            </div>
            <div class="card-body">
                <div class="form-group">
                    <label asp-for="SelectedBusinessPartnerId" class="form-label">Select Existing Business Partner <span class="text-danger">*</span></label>
                    <select id="bpDropdown" asp-for="SelectedBusinessPartnerId" asp-items="Model.ExistingBusinessPartners" class="form-select" required>
                        <option value="">-- Create New Business Partner --</option>
                    </select>
                </div>

                <div id="newBpFields" class="row g-3">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Fullname" class="form-label">Full Name <span class="text-danger">*</span></label>
                            <input asp-for="Fullname" class="form-control" required />
                            <span asp-validation-for="Fullname" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Role" class="form-label">Role <span class="text-danger">*</span></label>
                            <input asp-for="Role" class="form-control" required />
                            <span asp-validation-for="Role" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="CustomerCode" class="form-label">Customer Code <span class="text-danger">*</span></label>
                            <input asp-for="CustomerCode" class="form-control" required />
                            <span asp-validation-for="CustomerCode" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="ClientBase" class="form-label">Client Base <span class="text-danger">*</span></label>
                            <input asp-for="ClientBase" class="form-control" required />
                            <span asp-validation-for="ClientBase" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="IdSubmitted" class="form-label">ID Submitted <span class="text-danger">*</span></label>
                            <input asp-for="IdSubmitted" class="form-control" required />
                            <span asp-validation-for="IdSubmitted" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="IdDateSubmitted" class="form-label">ID Date Submitted <span class="text-danger">*</span></label>
                            <input asp-for="IdDateSubmitted" type="date" class="form-control" required />
                            <span asp-validation-for="IdDateSubmitted" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="EmailAddress" class="form-label">Email Address <span class="text-danger">*</span></label>
                            <input asp-for="EmailAddress" class="form-control" required />
                            <span asp-validation-for="EmailAddress" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="ContactNumber" class="form-label">Contact Number <span class="text-danger">*</span></label>
                            <input asp-for="ContactNumber" class="form-control" required />
                            <span asp-validation-for="ContactNumber" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-card">
            <div class="card-header">
                <i class="bi bi-house me-2"></i>Property Information
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="SelectedProjectName" class="form-label">Project Name <span class="text-danger">*</span></label>
                            <select asp-for="SelectedProjectName" asp-items="Model.ProjectNames" class="form-select" required id="projectNameSelect">
                                <option value="">-- Select Project --</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="SelectedBuildingPhase" class="form-label">Building Phase <span class="text-danger">*</span></label>
                            <select asp-for="SelectedBuildingPhase" asp-items="Model.BuildingPhases" class="form-select" required id="buildingPhaseSelect" disabled>
                                <option value="">-- Select Building Phase --</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="SelectedPropertyId" class="form-label">Available Units <span class="text-danger">*</span></label>
                            <select asp-for="SelectedPropertyId" asp-items="Model.Properties" class="form-select" required id="propertySelect" disabled>
                                <option value="">-- Select Unit --</option>
                            </select>
                            <span asp-validation-for="SelectedPropertyId" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-card">
            <div class="card-header">
                <i class="bi bi-person-badge me-2"></i>Sales Proponent Information
            </div>
            <div class="card-body">
                <div class="form-group">
                    <label asp-for="SelectedProponentBpNumber" class="form-label">Select Sales Proponent <span class="text-danger">*</span></label>
                    <select asp-for="SelectedProponentBpNumber" asp-items="Model.SalesProponents" class="form-select" required>
                        <option value="">-- Select a Sales Proponent --</option>
                    </select>
                    <span asp-validation-for="SelectedProponentBpNumber" class="text-danger"></span>
                </div>
            </div>
        </div>

        <div class="btn-group">
            <a asp-action="SearchResults" class="btn btn-secondary" asp-controller="SalesTransaction">
                <i class="bi bi-arrow-left"></i>Back to List
            </a>
            <button type="submit" class="btn btn-primary" id="submitBtn" asp-action="SearchResults" asp-controller="SalesTransaction">
                <span id="spinner" class="spinner-border spinner-border-sm d-none"></span>
                <i class="bi bi-save"></i>Save Transaction
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        const dropdown = document.getElementById("bpDropdown");
        const newFields = document.getElementById("newBpFields");

        function toggleNewFields() {
            if (dropdown.value) {
                newFields.classList.remove('visible');
                newFields.classList.add('hidden');
            } else {
                newFields.classList.remove('hidden');
                newFields.classList.add('visible');
            }
        }

        toggleNewFields();
        dropdown.addEventListener("change", toggleNewFields);

        // Enhanced property selection cascading dropdowns
        const projectSelect = document.getElementById('projectNameSelect');
        const phaseSelect = document.getElementById('buildingPhaseSelect');
        const propertySelect = document.getElementById('propertySelect');

        async function loadBuildingPhases() {
            try {
                phaseSelect.innerHTML = '<option value="">-- Select Building Phase --</option>';
                propertySelect.innerHTML = '<option value="">-- Select Unit --</option>';
                phaseSelect.disabled = !projectSelect.value;
                propertySelect.disabled = true;

                if (projectSelect.value) {
                    const response = await fetch(`/SalesTransaction/GetBuildingPhases?projectName=${encodeURIComponent(projectSelect.value)}`);
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    const phases = await response.json();
                    console.log('Loaded phases:', phases); // Debug log

                    if (phases && phases.length > 0) {
                        phases.forEach(phase => {
                            const option = new Option(phase, phase);
                            phaseSelect.add(option);
                        });
                    } else {
                        console.log('No phases found for project:', projectSelect.value);
                    }
                }
            } catch (error) {
                console.error('Error loading building phases:', error);
                alert('Failed to load building phases. Please try again.');
            }
        }

        async function loadAvailableUnits() {
            try {
                propertySelect.innerHTML = '<option value="">-- Select Unit --</option>';
                propertySelect.disabled = !phaseSelect.value;

                if (projectSelect.value && phaseSelect.value) {
                    const response = await fetch(
                        `/SalesTransaction/GetAvailableUnits?projectName=${encodeURIComponent(projectSelect.value)}&buildingPhase=${encodeURIComponent(phaseSelect.value)}`
                    );
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    const units = await response.json();
                    console.log('Loaded units:', units); // Debug log

                    if (units && units.length > 0) {
                        units.forEach(unit => {
                            const option = new Option(unit.unitCode, unit.propertyId);
                            propertySelect.add(option);
                        });
                    } else {
                        console.log('No units found for project:', projectSelect.value, 'and phase:', phaseSelect.value);
                    }
                }
            } catch (error) {
                console.error('Error loading available units:', error);
                alert('Failed to load available units. Please try again.');
            }
        }

        // Event listeners
        projectSelect.addEventListener('change', loadBuildingPhases);
        phaseSelect.addEventListener('change', loadAvailableUnits);

        // Form submission
        document.querySelector('form').addEventListener('submit', function(e) {
            const submitBtn = document.getElementById('submitBtn');
            const spinner = document.getElementById('spinner');
            
            // Basic validation
            if (!projectSelect.value) {
                e.preventDefault();
                alert('Please select a project');
                return;
            }
            if (!phaseSelect.value) {
                e.preventDefault();
                alert('Please select a building phase');
                return;
            }
            if (!propertySelect.value) {
                e.preventDefault();
                alert('Please select a unit');
                return;
            }

            submitBtn.disabled = true;
            spinner.classList.remove('d-none');
        });

        // Initial load if values are pre-selected (e.g., after validation failure)
        if (projectSelect.value) {
            loadBuildingPhases();
            if (phaseSelect.value) {
                loadAvailableUnits();
            }
        }
    </script>
}
